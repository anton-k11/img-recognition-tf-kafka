plugins {
    id 'java'
    id 'application'
    id 'img.recognition.tf.kafka.java-application-conventions'
    id 'org.springframework.boot' version "${springBootVersion}"
    id "de.undercouch.download" version "5.4.0"
}

apply plugin: 'application'
apply plugin: 'de.undercouch.download'

dependencies {
    implementation 'commons-io:commons-io:2.12.0'

    implementation('org.tensorflow:tensorflow-core-api:0.5.0')
    //CPU implementation
    implementation('org.tensorflow:tensorflow-core-api:0.5.0:linux-x86_64')
    // GPU implementation. To run tensorflow on GPU, you need cuda 11.8.0 enabled system or Docker image
//    implementation('org.tensorflow:tensorflow-core-api:0.5.0:linux-x86_64-gpu')

    implementation "com.fasterxml.jackson.core:jackson-databind:${project.jaksonVersion}"
    implementation "org.springframework.boot:spring-boot-starter:${project.springBootVersion}"
    implementation "org.springframework.kafka:spring-kafka:${project.springBootVersion}"
    implementation "org.apache.kafka:kafka-streams:${project.kafkaVersion}"
    compileOnly "org.projectlombok:lombok:${project.lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${project.lombokVersion}"

    testCompileOnly "org.projectlombok:lombok:${project.lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${project.lombokVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${project.springBootVersion}"
}

application {
    // Define the main class for the application.
    mainClass = 'img.recognition.ml.App'
}

tasks.register('downloadInceptionFrozen', Download) {
    onlyIfNewer true
    src 'https://storage.googleapis.com/download.tensorflow.org/models/inception_v3_2016_08_28_frozen.pb.tar.gz'
    dest new File(buildDir, 'inception_v3_2016_08_28_frozen.pb.tar.gz')
}

tasks.register('fetchInceptionFrozenModel', Copy) {
    dependsOn downloadInceptionFrozen
    from tarTree(downloadInceptionFrozen.dest)
    into 'src/main/resources/inception-v3'
}
